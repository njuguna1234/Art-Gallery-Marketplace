{"ast":null,"code":"var _jsxFileName = \"/home/roy/Art-Gallery-Marketplace/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArtworkForm({\n  artistId,\n  onSubmit\n}) {\n  _s();\n  // Accept artistId as prop\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [imageUrl, setImageUrl] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Create an object to send the data\n    const artworkData = {\n      title,\n      description,\n      price,\n      image_url: imageUrl,\n      // Send the image URL as part of the data\n      artist_id: artistId // Use the artistId passed in as a prop\n    };\n\n    // Send data to the backend\n    fetch(`https://art-gallery-backend-2-1.onrender.com/artworks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(artworkData) // Send artwork data as JSON\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Artwork uploaded successfully:', data);\n      // Optionally, you can call onSubmit to update the artwork list in ArtistProfile\n      if (onSubmit) {\n        onSubmit(data);\n      }\n      // Reset the form\n      setTitle('');\n      setDescription('');\n      setPrice(0);\n      setImageUrl('');\n    }).catch(error => {\n      console.error('Error uploading artwork:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Artwork\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        rows: \"4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUrl\",\n        children: \"Artwork Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"imageUrl\",\n        value: imageUrl,\n        onChange: e => setImageUrl(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtworkForm, \"3nXpGeun+68lZhlcBS/dpjvbRVE=\");\n_c = ArtworkForm;\nexport default ArtworkForm;\nvar _c;\n$RefreshReg$(_c, \"ArtworkForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ArtworkForm","artistId","onSubmit","_s","title","setTitle","description","setDescription","price","setPrice","imageUrl","setImageUrl","handleSubmit","e","preventDefault","artworkData","image_url","artist_id","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","rows","_c","$RefreshReg$"],"sources":["/home/roy/Art-Gallery-Marketplace/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Form.css';\n\nfunction ArtworkForm({ artistId, onSubmit }) {  // Accept artistId as prop\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [imageUrl, setImageUrl] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Create an object to send the data\n    const artworkData = {\n      title,\n      description,\n      price,\n      image_url: imageUrl,  // Send the image URL as part of the data\n      artist_id: artistId    // Use the artistId passed in as a prop\n    };\n\n    // Send data to the backend\n    fetch(`https://art-gallery-backend-2-1.onrender.com/artworks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(artworkData),  // Send artwork data as JSON\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Artwork uploaded successfully:', data);\n        // Optionally, you can call onSubmit to update the artwork list in ArtistProfile\n        if (onSubmit) {\n          onSubmit(data);\n        }\n        // Reset the form\n        setTitle('');\n        setDescription('');\n        setPrice(0);\n        setImageUrl('');\n      })\n      .catch((error) => {\n        console.error('Error uploading artwork:', error);\n      });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit} className=\"form\">\n        <h2>Upload Artwork</h2>\n\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          rows=\"4\"\n          required\n        />\n\n        <label htmlFor=\"price\">Price ($)</label>\n        <input\n          type=\"number\"\n          id=\"price\"\n          value={price}\n          onChange={(e) => setPrice(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"imageUrl\">Artwork Image URL</label>\n        <input\n          type=\"text\"\n          id=\"imageUrl\"\n          value={imageUrl}\n          onChange={(e) => setImageUrl(e.target.value)}\n          required\n        />\n\n        <button type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ArtworkForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}