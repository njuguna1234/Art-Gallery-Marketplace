{"ast":null,"code":"var _jsxFileName = \"/home/roy/Art-Gallery-Marketplace/src/components/ArtworkForm.js\",\n  _s = $RefreshSig$();\n// src/components/ArtworkForm.js\n\nimport React, { useState } from 'react';\nimport '../styles/Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArtworkForm({\n  onSubmit\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [artworkImage, setArtworkImage] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Create a FormData object to send the image and other fields\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('price', price);\n    if (artworkImage) {\n      formData.append('artworkImage', artworkImage); // Append the selected file\n    }\n\n    // Send data to the backend\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/artworks`, {\n      method: 'POST',\n      body: formData // Send the FormData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Artwork uploaded successfully:', data);\n      // Optionally, you can call onSubmit to update the artwork list in ArtistProfile\n      if (onSubmit) {\n        onSubmit(data);\n      }\n      // Reset the form\n      setTitle('');\n      setDescription('');\n      setPrice(0);\n      setArtworkImage(null);\n    }).catch(error => {\n      console.error('Error uploading artwork:', error);\n    });\n  };\n  const handleFileChange = e => {\n    setArtworkImage(e.target.files[0]); // Save the selected file\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Artwork\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        rows: \"4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"artworkImage\",\n        children: \"Upload Artwork Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"artworkImage\",\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtworkForm, \"wfJs5BZ1CiBJ92q0ZRBGwyZgiqI=\");\n_c = ArtworkForm;\nexport default ArtworkForm;\nvar _c;\n$RefreshReg$(_c, \"ArtworkForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ArtworkForm","onSubmit","_s","title","setTitle","description","setDescription","price","setPrice","artworkImage","setArtworkImage","handleSubmit","e","preventDefault","formData","FormData","append","fetch","process","env","REACT_APP_BACKEND_URL","method","body","then","response","ok","Error","json","data","console","log","catch","error","handleFileChange","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","required","rows","accept","_c","$RefreshReg$"],"sources":["/home/roy/Art-Gallery-Marketplace/src/components/ArtworkForm.js"],"sourcesContent":["// src/components/ArtworkForm.js\n\nimport React, { useState } from 'react';\nimport '../styles/Form.css';\n\nfunction ArtworkForm({ onSubmit }) {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [artworkImage, setArtworkImage] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Create a FormData object to send the image and other fields\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('price', price);\n    if (artworkImage) {\n      formData.append('artworkImage', artworkImage); // Append the selected file\n    }\n\n    // Send data to the backend\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/artworks`, {\n      method: 'POST',\n      body: formData,  // Send the FormData\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Artwork uploaded successfully:', data);\n        // Optionally, you can call onSubmit to update the artwork list in ArtistProfile\n        if (onSubmit) {\n          onSubmit(data);\n        }\n        // Reset the form\n        setTitle('');\n        setDescription('');\n        setPrice(0);\n        setArtworkImage(null);\n      })\n      .catch((error) => {\n        console.error('Error uploading artwork:', error);\n      });\n  };\n\n  const handleFileChange = (e) => {\n    setArtworkImage(e.target.files[0]); // Save the selected file\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit} className=\"form\">\n        <h2>Upload Artwork</h2>\n\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          rows=\"4\"\n          required\n        />\n\n        <label htmlFor=\"price\">Price ($)</label>\n        <input\n          type=\"number\"\n          id=\"price\"\n          value={price}\n          onChange={(e) => setPrice(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"artworkImage\">Upload Artwork Image</label>\n        <input\n          type=\"file\"\n          id=\"artworkImage\"\n          accept=\"image/*\"\n          onChange={handleFileChange}\n          required\n        />\n\n        <button type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ArtworkForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}