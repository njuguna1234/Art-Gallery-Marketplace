{"ast":null,"code":"var _jsxFileName = \"/home/roy/Art-Gallery-Marketplace/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(''); // State to handle error messages\n  const [successMessage, setSuccessMessage] = useState(''); // State to show success messages\n\n  const API_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001/artworks';\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous error and success messages\n    setError('');\n    setSuccessMessage('');\n\n    // Ensure all fields are filled out\n    if (!title || !description || !price || !file) {\n      setError('All fields are required!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('price', price);\n    formData.append('image', file);\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        // Display error message based on the response from the server\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Artwork uploaded successfully:', data);\n\n      // Display success message\n      setSuccessMessage('Artwork uploaded successfully!');\n\n      // Clear the form fields after successful upload\n      setTitle('');\n      setDescription('');\n      setPrice('');\n      setFile(null);\n    } catch (error) {\n      console.error('Error during artwork submission:', error);\n      // Set the error message to display on the UI\n      setError(error.message || 'An unexpected error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your Artwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: \"Upload Art\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        accept: \"image/*\",\n        onChange: e => setFile(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Artwork\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"ZzPGZadlCiCMjpSa6NIDF+xL8wU=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","_s","title","setTitle","description","setDescription","price","setPrice","file","setFile","error","setError","successMessage","setSuccessMessage","API_URL","process","env","REACT_APP_BACKEND_URL","handleSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","ok","errorData","json","Error","status","data","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","accept","files","_c","$RefreshReg$"],"sources":["/home/roy/Art-Gallery-Marketplace/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Form.css';\n\nfunction UploadForm() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(''); // State to handle error messages\n  const [successMessage, setSuccessMessage] = useState(''); // State to show success messages\n\n  const API_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001/artworks';\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Clear previous error and success messages\n    setError('');\n    setSuccessMessage('');\n\n    // Ensure all fields are filled out\n    if (!title || !description || !price || !file) {\n      setError('All fields are required!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('price', price);\n    formData.append('image', file);\n\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        // Display error message based on the response from the server\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('Artwork uploaded successfully:', data);\n\n      // Display success message\n      setSuccessMessage('Artwork uploaded successfully!');\n\n      // Clear the form fields after successful upload\n      setTitle('');\n      setDescription('');\n      setPrice('');\n      setFile(null);\n    } catch (error) {\n      console.error('Error during artwork submission:', error);\n      // Set the error message to display on the UI\n      setError(error.message || 'An unexpected error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"upload-form\">\n      <h2>Upload Your Artwork</h2>\n      {error && <div className=\"error-message\">{error}</div>}\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\n      <form onSubmit={handleSubmit} className=\"form\">\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"price\">Price</label>\n        <input\n          type=\"number\"\n          id=\"price\"\n          value={price}\n          onChange={(e) => setPrice(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"file\">Upload Art</label>\n        <input\n          type=\"file\"\n          id=\"file\"\n          accept=\"image/*\"\n          onChange={(e) => setFile(e.target.files[0])}\n          required\n        />\n\n        <button type=\"submit\">Upload Artwork</button>\n      </form>\n    </div>\n  );\n}\n\nexport default UploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}