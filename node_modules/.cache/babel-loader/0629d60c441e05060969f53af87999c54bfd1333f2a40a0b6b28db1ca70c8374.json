{"ast":null,"code":"var _jsxFileName = \"/home/roy/Art-Gallery-Marketplace/src/components/ArtistProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArtistProfile() {\n  _s();\n  const [artworks, setArtworks] = useState([]);\n  useEffect(() => {\n    const fetchArtworks = async () => {\n      try {\n        const response = await fetch('https://backend-deployment-4.onrender.com/api/artworks');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setArtworks(data.artworks);\n      } catch (error) {\n        console.error(\"Error fetching artworks:\", error);\n      }\n    };\n    fetchArtworks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Artworks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: artworks.map(artwork => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: artwork.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artwork.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", artwork.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artwork.image_url,\n          alt: artwork.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, artwork.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtistProfile, \"WO+OwxAdM+g3nh77WXJVuMYZB4A=\");\n_c = ArtistProfile;\nexport default ArtistProfile;\nvar _c;\n$RefreshReg$(_c, \"ArtistProfile\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ArtistProfile","_s","artworks","setArtworks","fetchArtworks","response","fetch","ok","Error","status","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artwork","title","description","price","src","image_url","alt","id","_c","$RefreshReg$"],"sources":["/home/roy/Art-Gallery-Marketplace/src/components/ArtistProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction ArtistProfile() {\n  const [artworks, setArtworks] = useState([]);\n\n  useEffect(() => {\n    const fetchArtworks = async () => {\n      try {\n        const response = await fetch('https://backend-deployment-4.onrender.com/api/artworks');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setArtworks(data.artworks);\n      } catch (error) {\n        console.error(\"Error fetching artworks:\", error);\n      }\n    };\n\n    fetchArtworks();\n  }, []);\n\n  return (\n    <div>\n      <h2>Your Artworks</h2>\n      <ul>\n        {artworks.map((artwork) => (\n          <li key={artwork.id}>\n            <h3>{artwork.title}</h3>\n            <p>{artwork.description}</p>\n            <p>Price: ${artwork.price}</p>\n            <img src={artwork.image_url} alt={artwork.title} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ArtistProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,CAAC;QACtF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCR,WAAW,CAACO,IAAI,CAACR,QAAQ,CAAC;MAC5B,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA;MAAAe,QAAA,EACGZ,QAAQ,CAACiB,GAAG,CAAEC,OAAO,iBACpBrB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAKM,OAAO,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBnB,OAAA;UAAAe,QAAA,EAAIM,OAAO,CAACE;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BnB,OAAA;UAAAe,QAAA,GAAG,UAAQ,EAACM,OAAO,CAACG,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BnB,OAAA;UAAKyB,GAAG,EAAEJ,OAAO,CAACK,SAAU;UAACC,GAAG,EAAEN,OAAO,CAACC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAJ5CE,OAAO,CAACO,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACjB,EAAA,CAnCQD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAqCtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}